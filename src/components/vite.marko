static function renderAssets(slot) {
  const entries = this.___viteEntries;
  let html = "";

  if (entries) {
    const slotWrittenEntriesKey = `___viteWrittenEntries-${slot}`;
    const lastWrittenEntry = this[slotWrittenEntriesKey] || 0;
    const writtenEntries = this[slotWrittenEntriesKey] = entries.length;
  
    for (let i = lastWrittenEntry; i < writtenEntries; i++) {
      const manifest = __MARKO_MANIFEST__[entries[i]];
      const slotHtml = manifest && manifest[slot] && manifest[slot].join(this.___viteInjectAttrs);

      if (slotHtml) {
        html += slotHtml;
      }
    }
  }

  return html;
}

$ const $global = out.global;
$ if (!$global.___viteRenderAssets) {
  $global.___viteInjectAttrs = $global.cspNonce ? ` nonce="${$global.cspNonce.replace(/"/g, "&#39;")}"` : "";
  $global.___viteRenderAssets = renderAssets;
}

<__flush_here_and_after__>
  $!{$global.___viteRenderAssets(input.slot)}
</>
