static function renderAssets(slot) {
  const entries = this.___viteEntries;
  let html = "";

  if (entries) {
    const slotWrittenEntriesKey = `___viteWrittenEntries-${slot}`;
    const lastWrittenEntry = this[slotWrittenEntriesKey] || 0;
    const writtenEntries = (this[slotWrittenEntriesKey] = entries.length);

    for (let i = lastWrittenEntry; i < writtenEntries; i++) {
      const entry = entries[i];
      const parts = typeof __MARKO_MANIFEST__ === "object"
        ? __MARKO_MANIFEST__[entry]?.[slot]
        : entry[slot];

      if (parts) {
        html += parts.join(this.___viteInjectAttrs);
      }
    }
  }

  return html;
}
$ const $global = out.global;
$ if (!$global.___viteRenderAssets) {
  $global.___viteInjectAttrs = $global.cspNonce
    ? ` nonce="${$global.cspNonce.replace(/"/g, "&#39;")}"`
    : "";
  $global.___viteRenderAssets = renderAssets;
}

<__flush_here_and_after__>
  $!{$global.___viteRenderAssets(input.slot)}
</__flush_here_and_after__>
